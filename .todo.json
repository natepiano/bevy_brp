[
  {
    "id": "terminal-title",
    "content": "run `echo -e \"\\e]2;Implementation: Standardize handler constants + convert trace tools\\007\"` to set terminal title",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "meta-todo",
    "content": "Do not deviate from the plan - if you think you need to deviate, STOP and ask the user for guidance",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-1",
    "content": "Add handler constants to src/constants.rs for all local handlers used in tool_definitions.rs",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-1",
    "content": "build and fix any compile errors and any compile warnings after adding handler constants",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-2",
    "content": "Update tool_definitions.rs to use handler constants instead of hardcoded strings for existing tools",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-2",
    "content": "build and fix any compile errors and any compile warnings after updating tool_definitions",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-3",
    "content": "Update tool_generator.rs match statements to use handler constants instead of hardcoded strings",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-3",
    "content": "build and fix any compile errors and any compile warnings after updating tool_generator",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy-checkpoint-1",
    "content": "run `cargo clippy --workspace --all-targets --all-features -- -D warnings`",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy-fix-1",
    "content": "fix any clippy issues after handler constants standardization",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-4",
    "content": "Create log_tools/brp_get_trace_log_path.rs with handle function matching local tool pattern",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-4",
    "content": "build and fix any compile errors and any compile warnings after creating brp_get_trace_log_path",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-5",
    "content": "Create log_tools/brp_set_tracing_level.rs with handle function matching local tool pattern",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-5",
    "content": "build and fix any compile errors and any compile warnings after creating brp_set_tracing_level",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-6",
    "content": "Update log_tools/mod.rs to add module declarations for both new trace tools",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-6",
    "content": "build and fix any compile errors and any compile warnings after adding module declarations",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-7",
    "content": "Add both trace tools to get_log_tools() function in tool_definitions.rs using handler constants",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-7",
    "content": "build and fix any compile errors and any compile warnings after adding trace tool definitions",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-8",
    "content": "Update tool_generator.rs to add routing cases for trace tools using handler constants",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-8",
    "content": "build and fix any compile errors and any compile warnings after adding trace tool routing",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-9",
    "content": "Remove manual registration for both trace tools from registry.rs",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-9",
    "content": "build and fix any compile errors and any compile warnings after removing manual registration",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-10",
    "content": "Remove old brp_tools/brp_get_trace_log_path.rs file",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-10",
    "content": "build and fix any compile errors and any compile warnings after removing old trace log path file",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-11",
    "content": "Remove old brp_tools/brp_set_tracing_level.rs file",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-11",
    "content": "build and fix any compile errors and any compile warnings after removing old tracing level file",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-12",
    "content": "Update brp_tools/mod.rs to remove module declarations for both removed trace tools",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-12",
    "content": "build and fix any compile errors and any compile warnings after removing old module declarations",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy-final",
    "content": "run `cargo clippy --workspace --all-targets --all-features -- -D warnings`",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy-fix-final",
    "content": "fix any final clippy issues",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "format",
    "content": "run `cargo +nightly fmt`",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "test",
    "content": "run 'cargo nextest run'",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "test-review",
    "content": "If there are test issues, STOP and review them with the user",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "code-review-setup",
    "content": "the subagent should STOP work here and return control to you and you should then continue with the following",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "code-review-task",
    "content": "task a new subagent to do a code review of the changes in the worktree - tell it to focus on identifying duplication and complexity. Additionally, ask that it focus on validating that the implementation plan was actually implemented. Emphasize that it should only read and analyze, not modify anything.",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "code-review-stop",
    "content": "when this new subagent returns, STOP and review the suggested changes with the user",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  }
]