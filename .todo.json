[
  {
    "id": "terminal_title",
    "content": "Set terminal title to indicate launch function deduplication work",
    "status": "completed",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "consolidate_platform_code",
    "content": "Consolidate platform-specific code duplication in src/app_tools/support/process.rs - merge duplicate launch_detached_process() functions into single implementation with operation parameter",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build_platform_fix",
    "content": "Build and fix any compile errors and warnings after platform code consolidation",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "create_launch_common",
    "content": "Create shared launch helpers module src/app_tools/support/launch_common.rs - extract common validation, logging, and response patterns from both launch functions",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build_common_module",
    "content": "Build and fix any compile errors and warnings after creating launch_common module",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "add_module_export",
    "content": "Add launch_common module export to src/app_tools/support/mod.rs",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build_module_export",
    "content": "Build and fix any compile errors and warnings after adding module export",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "refactor_app_launch",
    "content": "Refactor brp_launch_bevy_app.rs to use shared helper functions - extract common validation, logging, and response construction while preserving app-specific logic",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build_app_refactor",
    "content": "Build and fix any compile errors and warnings after app launch refactor",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "refactor_example_launch",
    "content": "Refactor brp_launch_bevy_example.rs to use shared helper functions - extract common patterns while preserving example-specific cargo run logic",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build_example_refactor",
    "content": "Build and fix any compile errors and warnings after example launch refactor",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy_check",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "fix_clippy_issues",
    "content": "Fix any clippy issues - remove dead code (don't mark as dead), remove unused variables/arguments (don't prefix with _)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "format_code",
    "content": "Run cargo +nightly fmt to format code",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "run_tests",
    "content": "Run cargo nextest run to execute tests",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "review_test_failures",
    "content": "If there are test issues, STOP and review them with the user",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "code_review_setup",
    "content": "Task a new subagent to do code review of changes - focus on identifying duplication and complexity, read and analyze only (no modifications)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "review_suggestions",
    "content": "When subagent returns, STOP and review suggested changes with the user",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  }
]