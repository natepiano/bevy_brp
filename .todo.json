[
  {
    "id": "phase1-infra-1",
    "content": "Phase 1: Add regenerate_all_examples() private method to UnifiedTypeInfo",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase1-infra-2",
    "content": "Phase 1: Remove redundant generate_insert_example() method from UnifiedTypeInfo",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase1-infra-3",
    "content": "Phase 1: Add debug assertion to to_correction() and remove ensure_examples() call",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase1-build",
    "content": "Run cargo build and fix any Phase 1 errors",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase2-adapter-1",
    "content": "Phase 2: Update from_type_discovery_response_json to call regenerate_all_examples()",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase2-adapter-2",
    "content": "Phase 2: Update from_registry_schema to call regenerate_all_examples()",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase2-build-1",
    "content": "Run cargo build and fix adapter errors",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase2-recovery",
    "content": "Phase 2: Update fallback_pattern_based_correction in recovery_engine.rs",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase2-enum",
    "content": "Phase 2: Update handle_enum_unit_variant_error in enum_variant.rs",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase2-build-2",
    "content": "Run cargo build and fix recovery/enum errors",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase2-tests",
    "content": "Phase 2: Update tests in unified_types.rs to use regenerate_all_examples()",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase2-build-3",
    "content": "Run cargo build and verify Phase 2 complete",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "clippy-1",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "clippy-fix-1",
    "content": "Fix all clippy issues following WarningRules",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase3-remove",
    "content": "Phase 3: Remove ensure_examples() method from UnifiedTypeInfo",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase3-signature",
    "content": "Phase 3: Change to_correction signature from &mut self to &self",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase3-engine-1",
    "content": "Phase 3: Update engine.rs line ~252 to remove clone and mut",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase3-engine-2",
    "content": "Phase 3: Simplify build_corrected_value_from_type_info in engine.rs",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase3-build",
    "content": "Run cargo build and fix all Phase 3 errors",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "clippy-2",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "clippy-fix-2",
    "content": "Fix all final clippy issues",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "fmt",
    "content": "Run cargo +nightly fmt",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "tests",
    "content": "Run cargo nextest run",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "test-review",
    "content": "STOP if test failures - review with user",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "subagent-stop",
    "content": "Subagent: STOP and return control",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "code-review",
    "content": "Main: Task new subagent for code review (read-only)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "review-user",
    "content": "Review suggestions with user",
    "status": "pending",
    "priority": "high",
    "notes": ""
  }
]
EOF < /dev/null