[
  {
    "id": "1",
    "content": "Set terminal title: echo -e \"\\e]2;Implementation: Code review improvements - no design needed\\007\"",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "2",
    "content": "MetaTodo: Do not deviate from the plan - if you think you need to deviate, STOP and ask the user for guidance",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "3",
    "content": "Create FormatterDef::default() method that returns empty formatter for local tools",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "4",
    "content": "Build and fix any compile errors and any compile warnings (no dead code, no _ prefixes)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "5",
    "content": "Create get_all_tools() function in tool_definitions.rs that combines standard, special, log, and app tools",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "6",
    "content": "Build and fix any compile errors and any compile warnings (no dead code, no _ prefixes)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "7",
    "content": "Simplify handle_tool_call() in registry.rs to use single lookup with get_all_tools()",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "8",
    "content": "Build and fix any compile errors and any compile warnings (no dead code, no _ prefixes)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "9",
    "content": "Update all local tool definitions in get_log_tools() and get_app_tools() to use FormatterDef::default()",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "10",
    "content": "Build and fix any compile errors and any compile warnings (no dead code, no _ prefixes)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "11",
    "content": "Create helper functions add_port_param(), add_entity_param(), add_components_param() in tool_definitions.rs",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "12",
    "content": "Build and fix any compile errors and any compile warnings (no dead code, no _ prefixes)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "13",
    "content": "Simplify convert_extractor_type function by pre-creating common extractors",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "14",
    "content": "Build and fix any compile errors and any compile warnings (no dead code, no _ prefixes)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "15",
    "content": "Add unit tests for tool registration and handler generation",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "16",
    "content": "Build and fix any compile errors and any compile warnings (no dead code, no _ prefixes)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "17",
    "content": "Create developer documentation for the declarative pattern in tool_definitions.rs module docs",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "18",
    "content": "Build and fix any compile errors and any compile warnings (no dead code, no _ prefixes)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "19",
    "content": "Run cargo clippy --workspace --all-targets --all-features",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "20",
    "content": "Fix any clippy issues (no dead code, no _ prefixes)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "21",
    "content": "Run cargo +nightly fmt",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "22",
    "content": "Run cargo nextest run",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "23",
    "content": "If there are test issues, STOP and review them with the user",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "24",
    "content": "Task a new subagent to do a code review of the changes - focus on identifying duplication and complexity (read-only)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "25",
    "content": "When subagent returns, STOP and review the suggested changes with the user",
    "status": "pending",
    "priority": "high",
    "notes": ""
  }
]