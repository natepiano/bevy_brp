[
  {
    "id": "terminal-title",
    "content": "run `echo -e \"\\e]2;Implementation: Convert (Value, String) tuple to TransformationResult struct\\007\"` to set terminal title",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "meta-todo",
    "content": "Do not deviate from the plan - if you think you need to deviate, STOP and ask the user for guidance",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-1",
    "content": "Define TransformationResult struct in unified_types.rs with corrected_value: Value and hint: String fields",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-1",
    "content": "build and fix any compile errors and any compile warnings after defining struct",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-2",
    "content": "Add 'use super::unified_types::TransformationResult;' import to transformers.rs",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-2",
    "content": "build and fix any compile errors and any compile warnings after adding import",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-3",
    "content": "Update FormatTransformer trait in transformers.rs to return Option<TransformationResult> for transform() and transform_with_error() methods",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-3",
    "content": "build and fix any compile errors and any compile warnings after updating trait",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-4",
    "content": "Update TransformerRegistry methods in transformers.rs to return Option<TransformationResult> (transform_with_type_info, transform_legacy, transform)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-4",
    "content": "build and fix any compile errors and any compile warnings after updating registry",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy-1",
    "content": "run `cargo clippy --workspace --all-targets --all-features -- -D warnings`",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy-fix-1",
    "content": "fix any clippy issues",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-5",
    "content": "Add TransformationResult import and update enum_variant.rs transformer (15 methods) to return TransformationResult",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-5",
    "content": "build and fix any compile errors and any compile warnings after updating enum_variant",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-6",
    "content": "Add TransformationResult import and update math_type.rs transformer (5 methods) to return TransformationResult",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-6",
    "content": "build and fix any compile errors and any compile warnings after updating math_type",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-7",
    "content": "Add TransformationResult import and update string_type.rs transformer (4 methods) to return TransformationResult",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-7",
    "content": "build and fix any compile errors and any compile warnings after updating string_type",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-8",
    "content": "Add TransformationResult import and update tuple_struct.rs transformer (6 methods) to return TransformationResult",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-8",
    "content": "build and fix any compile errors and any compile warnings after updating tuple_struct",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy-2",
    "content": "run `cargo clippy --workspace --all-targets --all-features -- -D warnings`",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy-fix-2",
    "content": "fix any clippy issues",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-9",
    "content": "Add TransformationResult import to recovery_engine.rs",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-9",
    "content": "build and fix any compile errors and any compile warnings after adding import",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-10",
    "content": "Update transform_result_to_correction() signature and implementation in recovery_engine.rs to accept TransformationResult",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-10",
    "content": "build and fix any compile errors and any compile warnings after updating function",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-11",
    "content": "Update the two transformation call sites in recovery_engine.rs to use TransformationResult",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-11",
    "content": "build and fix any compile errors and any compile warnings after updating call sites",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-12",
    "content": "Update all test destructuring patterns in enum_variant.rs tests (7 tests) to use TransformationResult",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-12",
    "content": "build and fix any compile errors and any compile warnings after updating enum_variant tests",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-13",
    "content": "Update all test destructuring patterns in math_type.rs tests (3 tests) to use TransformationResult",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-13",
    "content": "build and fix any compile errors and any compile warnings after updating math_type tests",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-14",
    "content": "Update all test destructuring patterns in string_type.rs tests (3 tests) to use TransformationResult",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-14",
    "content": "build and fix any compile errors and any compile warnings after updating string_type tests",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl-15",
    "content": "Update all test destructuring patterns in tuple_struct.rs tests (4 tests) to use TransformationResult",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build-15",
    "content": "build and fix any compile errors and any compile warnings after updating tuple_struct tests",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy-final",
    "content": "run `cargo clippy --workspace --all-targets --all-features -- -D warnings`",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy-fix-final",
    "content": "fix any clippy issues",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "format",
    "content": "run `cargo +nightly fmt`",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "test",
    "content": "run 'cargo nextest run'",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "test-review",
    "content": "If there are test issues, STOP and review them with the user",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "code-review-setup",
    "content": "the subagent should STOP work here and return control to you and you should then continue with the following",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "code-review-task",
    "content": "task a new subagent to do a code review of the changes in the worktree - tell it to focus on identifying duplication and complexity. Additionally, ask that it focus on validating that the implementation plan was actually implemented. Emphasize that it should only read and analyze, not modify anything.",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "code-review-review",
    "content": "when this new subagent returns, STOP and review the suggested changes with the user",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  }
]