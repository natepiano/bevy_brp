[
  {
    "id": "meta",
    "content": "Do not deviate from the plan - if you think you need to deviate, STOP and ask the user for guidance",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "1.1",
    "content": "Implement actual registry checking logic in registry_integration.rs with real BRP calls to bevy/registry_schema",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "1.2",
    "content": "Build and fix any compile errors and warnings after registry_integration.rs implementation",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "1.3",
    "content": "Replace Level 1 stubs in recovery_engine.rs execute_level_1_registry_checks() with actual calls to registry_integration.rs",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "1.4",
    "content": "Build and fix any compile errors and warnings after Level 1 recovery engine implementation",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "2.1",
    "content": "Implement actual bevy_brp_extras integration in extras_integration.rs with real calls to bevy_brp_extras/discover_format",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "2.2",
    "content": "Build and fix any compile errors and warnings after extras_integration.rs implementation",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "2.3",
    "content": "Replace Level 2 stubs in recovery_engine.rs execute_level_2_direct_discovery() with actual calls to extras_integration.rs",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "2.4",
    "content": "Build and fix any compile errors and warnings after Level 2 recovery engine implementation",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "3.1",
    "content": "Update transformers/mod.rs to accept UnifiedTypeInfo input and work with new recovery system",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "3.2",
    "content": "Build and fix any compile errors and warnings after transformers update",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "3.3",
    "content": "Replace Level 3 stubs in recovery_engine.rs execute_level_3_pattern_transformations() with actual transformer calls",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "3.4",
    "content": "Build and fix any compile errors and warnings after Level 3 recovery engine implementation",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy1",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy1b",
    "content": "Fix any clippy issues from Phases 1-3 (3-level recovery system implementation)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "4.1",
    "content": "Replace stub call in engine.rs execute_exception_path() with actual recovery engine integration",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "4.2",
    "content": "Implement error classification logic to route format errors through recovery engine",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "4.3",
    "content": "Build and fix any compile errors and warnings after engine integration",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "5.1",
    "content": "Update phases/tier_execution.rs to delegate to recovery engine instead of legacy tier logic",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "5.2",
    "content": "Remove TierManager and DebugContext complexity from detection.rs",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "5.3",
    "content": "Update phases/result_building.rs to work directly with UnifiedTypeInfo",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "5.4",
    "content": "Build and fix any compile errors and warnings after legacy system replacement",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy2",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy2b",
    "content": "Fix any clippy issues from Phases 4-5 (engine integration and legacy cleanup)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "6.1",
    "content": "Update existing tests in tests.rs to work with new recovery system functionality",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "6.2",
    "content": "Add integration tests for complete recovery flow from format error to corrected format",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "6.3",
    "content": "Test mutation_paths preservation through all 3 recovery levels",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "6.4",
    "content": "Build and fix any compile errors and warnings after testing updates",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "7.1",
    "content": "Remove unused legacy code, stubs, and TODO comments",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "7.2",
    "content": "Remove DiscoveredFacts intermediate type where no longer needed",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "7.3",
    "content": "Consolidate debug information collection systems",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "7.4",
    "content": "Build and fix any compile errors and warnings after cleanup",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy3",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy3b",
    "content": "Fix any clippy issues from Phases 6-7 (testing and cleanup)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "format",
    "content": "Run cargo +nightly fmt",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "test",
    "content": "Run cargo nextest run",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "test_review",
    "content": "If there are test issues, STOP and review them with the user",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "code_review_prep",
    "content": "STOP work here and return control to main agent for code review",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "code_review",
    "content": "Task new subagent to do code review focusing on duplication, complexity, and plan implementation validation",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "code_review_discuss",
    "content": "When subagent returns, STOP and review suggested changes with user",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  }
]