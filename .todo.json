[
  {
    "id": "terminal_title",
    "content": "Set terminal title to indicate code review fixes implementation work",
    "status": "completed",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "fix_app_example_naming",
    "content": "Fix App vs Example naming issue - modify create_log_file() signature to include launch_type parameter, update log header to show 'App:' or 'Example:' accordingly, update brp_launch_bevy_app.rs and brp_launch_bevy_example.rs to pass correct type",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build_naming_fix",
    "content": "Build and fix any compile errors and warnings after app/example naming fix",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "replace_unsafe_code",
    "content": "Replace unsafe code with tokio::process - eliminate unsafe libc::fork(), libc::setsid(), libc::waitpid() calls in src/app_tools/support/process.rs, use tokio::process::Command for cross-platform detached process creation",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build_process_fix",
    "content": "Build and fix any compile errors and warnings after replacing unsafe code",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "refactor_stream_processing",
    "content": "Refactor complex process_watch_stream() function in src/brp_tools/watch/support/task.rs - break 142-line function into smaller functions: process_chunk(), parse_sse_line(), log_update()",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build_stream_refactor",
    "content": "Build and fix any compile errors and warnings after stream processing refactor",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy_check",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "fix_clippy_issues",
    "content": "Fix any clippy issues - remove dead code (don't mark as dead), remove unused variables/arguments (don't prefix with _)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "format_code",
    "content": "Run cargo +nightly fmt to format code",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "run_tests",
    "content": "Run cargo nextest run to execute tests",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "review_test_failures",
    "content": "If there are test issues, STOP and review them with the user",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "code_review_setup",
    "content": "Task a new subagent to do code review of changes - focus on identifying duplication and complexity, read and analyze only (no modifications)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "review_suggestions",
    "content": "When subagent returns, STOP and review suggested changes with the user",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  }
]