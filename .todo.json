[
  {
    "id": "meta",
    "content": "Do not deviate from the plan - if you think you need to deviate, STOP and ask the user for guidance",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase1-1",
    "content": "Update mcp/src/tool_definitions.rs - Add new FormatterType variants (LocalStandard, LocalCollection, LocalStatus, LocalError)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase1-2",
    "content": "Build and fix any compile errors and warnings after adding FormatterType variants",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase1-3",
    "content": "Update mcp/src/tool_definitions.rs - Add new ExtractorType variants for local patterns (StatusFromContext, CountFromData, MessageFromParams, TempDirectory)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase1-4",
    "content": "Build and fix any compile errors and warnings after adding ExtractorType variants",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase1-5",
    "content": "Update mcp/src/response/formatter.rs - Extend ResponseFormatterFactory to handle new FormatterType variants",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase1-6",
    "content": "Build and fix any compile errors and warnings after updating ResponseFormatterFactory",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase1-7",
    "content": "Update mcp/src/response/extractors.rs - Add new extractor functions for local patterns",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase1-8",
    "content": "Build and fix any compile errors and warnings after adding new extractors",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase1-9",
    "content": "Update mcp/src/tool_generator.rs - Update convert_extractor_type to handle new ExtractorType variants",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase1-10",
    "content": "Build and fix any compile errors and warnings after updating convert_extractor_type",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy1",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy1-fix",
    "content": "Fix any clippy issues following our rules (remove dead code, don't use _ prefixes)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase2-1",
    "content": "Update mcp/src/tool_definitions.rs - Change list_logs tool definition to use FormatterType::LocalCollection",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase2-2",
    "content": "Build and fix any compile errors and warnings after updating list_logs definition",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase2-3",
    "content": "Update mcp/src/tool_definitions.rs - Change read_log tool definition to use FormatterType::LocalStandard",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase2-4",
    "content": "Build and fix any compile errors and warnings after updating read_log definition",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase2-5",
    "content": "Update mcp/src/tool_definitions.rs - Change cleanup_logs tool definition to use FormatterType::LocalStandard",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase2-6",
    "content": "Build and fix any compile errors and warnings after updating cleanup_logs definition",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase2-7",
    "content": "Update mcp/src/tool_definitions.rs - Change brp_status tool definition to use FormatterType::LocalStatus",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase2-8",
    "content": "Build and fix any compile errors and warnings after updating brp_status definition",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase2-9",
    "content": "Update remaining local tool definitions to use appropriate FormatterType variants",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase2-10",
    "content": "Build and fix any compile errors and warnings after updating all local tool definitions",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy2",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy2-fix",
    "content": "Fix any clippy issues following our rules (remove dead code, don't use _ prefixes)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase3-1",
    "content": "Update mcp/src/tool_generator.rs - Modify generate_local_handler to create ResponseFormatter from tool definition",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase3-2",
    "content": "Build and fix any compile errors and warnings after updating generate_local_handler",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase3-3",
    "content": "Create local handler adapter pattern in tool_generator.rs to convert handler results to formatter data",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase3-4",
    "content": "Build and fix any compile errors and warnings after creating local handler adapter",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy3",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy3-fix",
    "content": "Fix any clippy issues following our rules (remove dead code, don't use _ prefixes)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase4-1",
    "content": "Refactor mcp/src/log_tools/list_logs.rs to return Value instead of CallToolResult",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase4-2",
    "content": "Build and fix any compile errors and warnings after refactoring list_logs",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase4-3",
    "content": "Refactor mcp/src/log_tools/read_log.rs to return Value instead of CallToolResult",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase4-4",
    "content": "Build and fix any compile errors and warnings after refactoring read_log",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase4-5",
    "content": "Refactor mcp/src/app_tools/brp_status.rs to return Value instead of CallToolResult",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase4-6",
    "content": "Build and fix any compile errors and warnings after refactoring brp_status",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase4-7",
    "content": "Refactor remaining local handlers to return Value instead of CallToolResult",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase4-8",
    "content": "Build and fix any compile errors and warnings after refactoring all local handlers",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy4",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy4-fix",
    "content": "Fix any clippy issues following our rules (remove dead code, don't use _ prefixes)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase5-1",
    "content": "Remove mcp/src/response/response.rs file",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase5-2",
    "content": "Remove mcp/src/response/builder.rs file",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase5-3",
    "content": "Update mcp/src/response/mod.rs to remove exports of Response and ResponseBuilder",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase5-4",
    "content": "Build and fix any compile errors and warnings after removing old Response API",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase5-5",
    "content": "Remove any remaining imports of Response API throughout the codebase",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "phase5-6",
    "content": "Build and fix any compile errors and warnings after removing all Response imports",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy5",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy5-fix",
    "content": "Fix any clippy issues following our rules (remove dead code, don't use _ prefixes)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "format",
    "content": "Run cargo +nightly fmt",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "test",
    "content": "Run cargo nextest run",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "test-review",
    "content": "If there are test issues, STOP and review them with the user",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "code-review",
    "content": "Task a new subagent to do code review focusing on duplication, complexity, and plan validation",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "code-review-stop",
    "content": "STOP and review the suggested changes with the user",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  }
]