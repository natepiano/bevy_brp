[
  {
    "id": "terminal_title",
    "content": "Set terminal title to indicate current work being done",
    "status": "completed",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "enhance_format_error_default",
    "content": "Enhance format_error_default() to extract guidance from format_corrections and create rich error content with examples, hint, valid_values, usage",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "build_after_enhance",
    "content": "Build and fix any compile errors and warnings after enhancing format_error_default",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "redirect_enum_errors",
    "content": "Modify process_error_response() to route all errors through enhanced format_error_default instead of create_clean_enum_error_response",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "build_after_redirect",
    "content": "Build and fix any compile errors and warnings after redirecting enum errors",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "remove_enum_error_functions",
    "content": "Delete create_clean_enum_error_response() and is_enum_mutation_error() functions entirely",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "build_after_remove_functions",
    "content": "Build and fix any compile errors and warnings after removing enum error functions",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "clippy_check_1",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "fix_clippy_1",
    "content": "Fix any clippy issues without using dead code attributes or underscore prefixes",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "remove_use_default_error_config",
    "content": "Remove use_default_error field from FormatterConfig and all references to conditional error formatting",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "build_after_config_cleanup",
    "content": "Build and fix any compile errors and warnings after removing config fields",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "final_clippy_check",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "fix_final_clippy",
    "content": "Fix any final clippy issues without using dead code attributes or underscore prefixes",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "format_code",
    "content": "Run cargo +nightly fmt",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "run_tests",
    "content": "Run cargo nextest run",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "handle_test_issues",
    "content": "If there are test issues, STOP and review them with the user",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "code_review_prep",
    "content": "Task a new subagent to do a code review of the changes, focusing on duplication, complexity, and validating the implementation plan was followed",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "review_suggestions",
    "content": "When subagent returns, STOP and review the suggested changes with the user",
    "status": "pending",
    "priority": "high",
    "notes": ""
  }
]