[
  {
    "id": "1",
    "content": "Set terminal title: echo -e \"\\e]2;Implementation: Format Discovery Consolidation\\007\"",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "2",
    "content": "META: Do not deviate from the plan - if you think you need to deviate, STOP and ask the user for guidance",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "3",
    "content": "Phase 1.2: Consolidate fix functions - merge fix_type_mismatch, fix_variant_type_mismatch, and parts of fix_missing_field into fix_structure_mismatch",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "4",
    "content": "Build and fix any compile errors and warnings from fix function consolidation",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "5",
    "content": "Phase 1.2: Extract common transformation patterns into helper functions",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "6",
    "content": "Build and fix any compile errors and warnings from helper function extraction",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "7",
    "content": "Phase 1.1: Simplify ErrorPattern enum - merge TypeMismatch and VariantTypeMismatch variants",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "8",
    "content": "Build and fix any compile errors and warnings from ErrorPattern consolidation",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "9",
    "content": "Phase 1.1: Create single regex pattern matcher to replace 9+ separate detection functions",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "10",
    "content": "Build and fix any compile errors and warnings from pattern matcher consolidation",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "11",
    "content": "Phase 2.1: Create TransformationHint enum and analyze_error_for_transformation_hint function",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "12",
    "content": "Build and fix any compile errors and warnings from TransformationHint implementation",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "13",
    "content": "Phase 2.1: Replace blind try everything with get_transformations_for_hint guided approach",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "14",
    "content": "Build and fix any compile errors and warnings from guided transformation implementation",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "15",
    "content": "Phase 3.1: Create known type rules table for fast path (Vec2, Vec3, Vec4, Quat, Transform, Name, Colors)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "16",
    "content": "Build and fix any compile errors and warnings from known type rules implementation",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "17",
    "content": "Phase 3.1: Implement apply_smart_format_discovery to consolidate Tiers 3+4",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "18",
    "content": "Build and fix any compile errors and warnings from smart format discovery implementation",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "19",
    "content": "Phase 3.2: Update tiered_type_format_discovery to use new consolidated approach",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "20",
    "content": "Build and fix any compile errors and warnings from tiered discovery updates",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "21",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings -W clippy::all -W clippy::pedantic -W clippy::nursery -W clippy::cargo -A clippy::multiple_crate_versions -A clippy::cargo_common_metadata",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "22",
    "content": "Fix any clippy issues following rules: no dead_code attributes, no underscore prefixes",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "23",
    "content": "Run cargo +nightly fmt",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "24",
    "content": "Run cargo nextest run",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "25",
    "content": "If there are test issues, STOP and review them with the user",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "26",
    "content": "Task a new subagent to do code review focusing on duplication and complexity (read-only analysis)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "27",
    "content": "Review suggested changes from code review subagent with user",
    "status": "pending",
    "priority": "high",
    "notes": ""
  }
]