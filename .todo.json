[
  {
    "id": "1",
    "content": "MetaTodo: Do not deviate from the plan - if you think you need to deviate, STOP and ask the user for guidance",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "2",
    "content": "Add extract_variants_from_format method stub to enum_variant.rs",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "3",
    "content": "Build and fix any compile errors and warnings after adding method stub",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "4",
    "content": "Add extract_enum_variants method to enum_variant.rs with full implementation",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "5",
    "content": "Build and fix any compile errors and warnings after adding extract_enum_variants",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "6",
    "content": "Refactor transform_with_error to use ErrorPattern matching instead of string contains",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "7",
    "content": "Build and fix any compile errors and warnings after refactoring transform_with_error",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "8",
    "content": "Update transform_with_error to use extract_enum_variants and pattern fields",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "9",
    "content": "Build and fix any compile errors and warnings after updating transform logic",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "10",
    "content": "Remove all hardcoded Visibility-specific values from enum_variant.rs",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "11",
    "content": "Build and fix any compile errors and warnings after removing hardcoded values",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "12",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings (mid-point check)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "13",
    "content": "Fix any clippy issues following rules (no dead code, no underscore prefixes)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "14",
    "content": "Add test module with test_enum_unit_variant_mutation_pattern_handling to enum_variant.rs",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "15",
    "content": "Build and fix any compile errors and warnings after adding first test",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "16",
    "content": "Add test_extract_enum_variants test to enum_variant.rs",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "17",
    "content": "Build and fix any compile errors and warnings after adding variant extraction test",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "18",
    "content": "Create new file mcp/tests/enum_mutation_errors.rs with basic test structure",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "19",
    "content": "Build and fix any compile errors and warnings after creating integration test file",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "20",
    "content": "Implement test_enum_mutation_error_messages test case",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "21",
    "content": "Build and fix any compile errors and warnings after implementing integration test",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "22",
    "content": "Remove any debug println! statements or temporary code",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "23",
    "content": "Build and fix any compile errors and warnings after cleanup",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "24",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings (final check)",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "25",
    "content": "Fix any final clippy issues following rules",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "26",
    "content": "Run cargo +nightly fmt",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "27",
    "content": "Run cargo nextest run",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "28",
    "content": "If there are test issues, STOP and review them with the user",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "29",
    "content": "CodeReview: Task subagent to review changes focusing on pattern usage and generic implementation",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "30",
    "content": "Review suggested changes from code review with user",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  }
]