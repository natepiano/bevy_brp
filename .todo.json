[
  {
    "id": "1",
    "content": "Add convenience method type_name() returning &BrpTypeName to UnifiedTypeInfo",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "2",
    "content": "Add convenience method in_registry() returning bool to UnifiedTypeInfo",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "3",
    "content": "Add convenience method has_serialize() returning bool to UnifiedTypeInfo",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "4",
    "content": "Add convenience method has_deserialize() returning bool to UnifiedTypeInfo",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "5",
    "content": "Add convenience method is_brp_compatible() returning bool to UnifiedTypeInfo",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "6",
    "content": "Add convenience method enum_info() returning Option<&Vec<EnumVariantInfo>> to UnifiedTypeInfo",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "7",
    "content": "Add convenience method mutation_paths() returning &HashMap<String, MutationPath> to UnifiedTypeInfo",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "8",
    "content": "Add convenience method supported_operations() returning &[BrpSupportedOperation] to UnifiedTypeInfo",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "9",
    "content": "Run cargo build && cargo +nightly fmt after adding all convenience methods",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "10",
    "content": "Update types.rs CorrectionInfo::to_json() to use convenience methods (3 occurrences)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "11",
    "content": "Update guidance.rs to use convenience methods (6 occurrences)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "12",
    "content": "Update serialization_check.rs to use convenience methods (6 occurrences)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "13",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "14",
    "content": "Update enum_variant.rs transformer to use convenience methods (4 occurrences)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "15",
    "content": "Update extras_discovery.rs to use convenience methods (3 occurrences)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "16",
    "content": "Update retry.rs to use convenience methods (1 occurrence)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "17",
    "content": "Update recovery_result.rs to use convenience methods (1 occurrence)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "18",
    "content": "Update pattern_correction.rs to use convenience methods (1 occurrence)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "19",
    "content": "Update math_type.rs transformer to use convenience methods (1 occurrence)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "20",
    "content": "Run cargo build && cargo +nightly fmt after updating all files",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "21",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "22",
    "content": "Search for any remaining verbose type_info.type_info patterns",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "23",
    "content": "Update any remaining UnifiedTypeInfo direct field accesses to use new methods",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "24",
    "content": "Run cargo nextest run",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "25",
    "content": "STOP if test failures - review with user",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "26",
    "content": "Final cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "27",
    "content": "Subagent: STOP and return control",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "28",
    "content": "Main: Task new subagent for code review (read-only)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "29",
    "content": "Review suggestions with user",
    "status": "pending",
    "priority": "high",
    "notes": ""
  }
]