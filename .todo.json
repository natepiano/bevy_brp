[
  {
    "id": "terminal_title",
    "content": "run `echo -e \"\\e]2;Implementation: Create Flat ToolHandler Structure\\007\"` to set terminal title",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "meta_todo",
    "content": "Do not deviate from the plan - if you think you need to deviate, STOP and ask the user for guidance",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "impl_1",
    "content": "Add ToolHandler trait to tool/types.rs: `pub trait ToolHandler { async fn call_tool(self: Box<Self>) -> Result<CallToolResult, McpError>; }`",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build_1",
    "content": "Build and fix any compile errors and any compile warnings after adding ToolHandler trait",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl_2",
    "content": "Create tool/local_handler.rs with LocalToolHandler struct wrapping HandlerContext<LocalContext> and ToolHandler impl calling crate::tool::local_tool_call",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build_2",
    "content": "Build and fix any compile errors and any compile warnings after creating local_handler.rs",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl_3",
    "content": "Create tool/brp_handler.rs with BrpToolHandler struct wrapping HandlerContext<BrpContext> and ToolHandler impl calling crate::tool::brp_method_tool_call",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build_3",
    "content": "Build and fix any compile errors and any compile warnings after creating brp_handler.rs",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl_4",
    "content": "Update tool/mod.rs to export new local_handler and brp_handler modules",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build_4",
    "content": "Build and fix any compile errors and any compile warnings after updating mod.rs exports",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy_mid",
    "content": "run `cargo clippy --workspace --all-targets --all-features -- -D warnings`",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy_fix_mid",
    "content": "fix any clippy issues following rules: do not mark dead code, do not prefix unused with _, remove if not used",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl_5",
    "content": "Add into_tool_handler() method to TypedContext in service/handler_context.rs that returns Box<dyn ToolHandler>",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build_5",
    "content": "Build and fix any compile errors and any compile warnings after adding into_tool_handler",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "impl_6",
    "content": "Update service call_tool method in service/mcp_service.rs to use new pattern: handler_context.into_typed()?.into_tool_handler().call_tool().await",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "build_6",
    "content": "Build and fix any compile errors and any compile warnings after updating service method",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy_final",
    "content": "run `cargo clippy --workspace --all-targets --all-features -- -D warnings`",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "clippy_fix_final",
    "content": "fix any clippy issues following rules: do not mark dead code, do not prefix unused with _, remove if not used",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "format",
    "content": "run `cargo +nightly fmt`",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "test",
    "content": "run `cargo nextest run`",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "test_review",
    "content": "If there are test issues, STOP and review them with the user",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "code_review",
    "content": "Task a new subagent to do a code review of the changes - focus on identifying duplication and complexity, and validating that the implementation plan was actually implemented. Emphasize that it should only read and analyze, not modify anything.",
    "status": "pending",
    "priority": "medium",
    "notes": ""
  },
  {
    "id": "review_feedback",
    "content": "When the review subagent returns, STOP and review the suggested changes with the user",
    "status": "pending",
    "priority": "high",
    "notes": ""
  }
]