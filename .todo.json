[
  {
    "id": "research_1",
    "content": "Research Phase: Search bevy_reflect crate for exact error message strings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "research_2",
    "content": "Research Phase: Search bevy_remote crate for exact error message strings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "research_3",
    "content": "Research Phase: Document all found error strings with source locations and create error catalog",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "impl_1",
    "content": "Add new static regex patterns for exact tuple struct error matching",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "build_1",
    "content": "Build and fix any compile errors and compile warnings from regex pattern additions",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "impl_2",
    "content": "Add error data parsing helper functions to extract path information",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "build_2",
    "content": "Build and fix any compile errors and compile warnings from helper function additions",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "impl_3",
    "content": "Rewrite analyze_error_pattern() to use only exact regex patterns (remove all contains() checks)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "build_3",
    "content": "Build and fix any compile errors and compile warnings from analyze_error_pattern() rewrite",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "impl_4",
    "content": "Update fix_tuple_struct_path() to handle all enum tuple variant cases",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "build_4",
    "content": "Build and fix any compile errors and compile warnings from tuple struct path fix updates",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "impl_5",
    "content": "Create exact regex patterns for TransformSequence errors based on research findings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "build_5",
    "content": "Build and fix any compile errors and compile warnings from TransformSequence pattern updates",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "impl_6",
    "content": "Create exact regex patterns for ExpectedType errors based on research findings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "build_6",
    "content": "Build and fix any compile errors and compile warnings from ExpectedType pattern updates",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "impl_7",
    "content": "Create exact regex patterns for MathTypeArray errors based on research findings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "build_7",
    "content": "Build and fix any compile errors and compile warnings from MathTypeArray pattern updates",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "clippy_1",
    "content": "Run cargo clippy with strict settings and fix any issues (no dead code marking, remove unused variables)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "format_1",
    "content": "Run cargo +nightly fmt to format code",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "test_1",
    "content": "Create test case for LinearRgba tuple struct error that originally failed",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "test_2",
    "content": "Create test cases for all other error patterns (Transform, ExpectedType, MathTypeArray)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "test_3",
    "content": "Run cargo nextest run and verify all tests pass",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "review_1",
    "content": "Task subagent for code review focusing on duplication and complexity (read-only analysis)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  }
]