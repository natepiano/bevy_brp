[
  {
    "content": "run `echo -e \"\\e]2;Implementation: Rename macro + auto-generate HANDLER constants + reorganize tools\\007\"` to set terminal title",
    "status": "pending",
    "priority": "medium",
    "id": "terminal-title",
    "notes": ""
  },
  {
    "content": "Do not deviate from the plan - if you think you need to deviate, STOP and ask the user for guidance",
    "status": "pending",
    "priority": "medium",
    "id": "meta-todo",
    "notes": ""
  },
  {
    "content": "Rename define_method! macro to define_tool_constants! in tools.rs",
    "status": "pending",
    "priority": "medium",
    "id": "rename-macro",
    "notes": ""
  },
  {
    "content": "build and fix any compile errors and any compile warnings after renaming macro",
    "status": "pending",
    "priority": "medium",
    "id": "build-1",
    "notes": ""
  },
  {
    "content": "Update all macro calls from define_method! to define_tool_constants! throughout tools.rs",
    "status": "pending",
    "priority": "medium",
    "id": "update-macro-calls",
    "notes": ""
  },
  {
    "content": "build and fix any compile errors and any compile warnings after updating macro calls",
    "status": "pending",
    "priority": "medium",
    "id": "build-2",
    "notes": ""
  },
  {
    "content": "Add HANDLER_* constant generation to define_tool_constants!(app, ...) variant with 'handler_' prefix pattern",
    "status": "pending",
    "priority": "medium",
    "id": "add-handler-app",
    "notes": ""
  },
  {
    "content": "build and fix any compile errors and any compile warnings after adding app handler generation",
    "status": "pending",
    "priority": "medium",
    "id": "build-3",
    "notes": ""
  },
  {
    "content": "Add HANDLER_* constant generation to define_tool_constants!(log, ...) variant with 'handler_' prefix pattern",
    "status": "pending",
    "priority": "medium",
    "id": "add-handler-log",
    "notes": ""
  },
  {
    "content": "build and fix any compile errors and any compile warnings after adding log handler generation",
    "status": "pending",
    "priority": "medium",
    "id": "build-4",
    "notes": ""
  },
  {
    "content": "ATOMICALLY: Move help_text/brp_tools/brp_status.txt to help_text/app_tools/brp_status.txt AND update tools.rs to use define_tool_constants!(app, status)",
    "status": "pending",
    "priority": "medium",
    "id": "move-status-atomic",
    "notes": ""
  },
  {
    "content": "build and fix any compile errors and any compile warnings after moving status tool",
    "status": "pending",
    "priority": "medium",
    "id": "build-5",
    "notes": ""
  },
  {
    "content": "ATOMICALLY: Move help_text/brp_tools/brp_get_trace_log_path.txt to help_text/log_tools/brp_get_trace_log_path.txt AND update tools.rs to use define_tool_constants!(log, get_trace_log_path)",
    "status": "pending",
    "priority": "medium",
    "id": "move-trace-log-atomic",
    "notes": ""
  },
  {
    "content": "build and fix any compile errors and any compile warnings after moving trace log path tool",
    "status": "pending",
    "priority": "medium",
    "id": "build-6",
    "notes": ""
  },
  {
    "content": "ATOMICALLY: Move help_text/brp_tools/brp_set_tracing_level.txt to help_text/log_tools/brp_set_tracing_level.txt AND update tools.rs to use define_tool_constants!(log, set_tracing_level)",
    "status": "pending",
    "priority": "medium",
    "id": "move-tracing-level-atomic",
    "notes": ""
  },
  {
    "content": "build and fix any compile errors and any compile warnings after moving tracing level tool",
    "status": "pending",
    "priority": "medium",
    "id": "build-7",
    "notes": ""
  },
  {
    "content": "run `cargo clippy --workspace --all-targets --all-features -- -D warnings`",
    "status": "pending",
    "priority": "medium",
    "id": "clippy-checkpoint-1",
    "notes": ""
  },
  {
    "content": "fix any clippy issues after tool reorganization",
    "status": "pending",
    "priority": "medium",
    "id": "clippy-fix-1",
    "notes": ""
  },
  {
    "content": "Remove all manually created HANDLER_* constants from src/constants.rs",
    "status": "pending",
    "priority": "medium",
    "id": "remove-manual-constants",
    "notes": ""
  },
  {
    "content": "build and fix any compile errors and any compile warnings after removing manual constants",
    "status": "pending",
    "priority": "medium",
    "id": "build-8",
    "notes": ""
  },
  {
    "content": "Update tool_definitions.rs imports to use generated HANDLER_* constants from tools module",
    "status": "pending",
    "priority": "medium",
    "id": "update-tool-def-imports",
    "notes": ""
  },
  {
    "content": "build and fix any compile errors and any compile warnings after updating tool_definitions imports",
    "status": "pending",
    "priority": "medium",
    "id": "build-9",
    "notes": ""
  },
  {
    "content": "Update tool_generator.rs imports to use generated HANDLER_* constants from tools module",
    "status": "pending",
    "priority": "medium",
    "id": "update-tool-gen-imports",
    "notes": ""
  },
  {
    "content": "build and fix any compile errors and any compile warnings after updating tool_generator imports",
    "status": "pending",
    "priority": "medium",
    "id": "build-10",
    "notes": ""
  },
  {
    "content": "Update all handler string values in tool_generator.rs match statements to use new 'handler_' prefix pattern",
    "status": "pending",
    "priority": "medium",
    "id": "update-match-patterns",
    "notes": ""
  },
  {
    "content": "build and fix any compile errors and any compile warnings after updating match patterns",
    "status": "pending",
    "priority": "medium",
    "id": "build-11",
    "notes": ""
  },
  {
    "content": "run `cargo clippy --workspace --all-targets --all-features -- -D warnings`",
    "status": "pending",
    "priority": "medium",
    "id": "clippy-final",
    "notes": ""
  },
  {
    "content": "fix any final clippy issues",
    "status": "pending",
    "priority": "medium",
    "id": "clippy-fix-final",
    "notes": ""
  },
  {
    "content": "run `cargo +nightly fmt`",
    "status": "pending",
    "priority": "medium",
    "id": "format",
    "notes": ""
  },
  {
    "content": "run 'cargo nextest run'",
    "status": "pending",
    "priority": "medium",
    "id": "test",
    "notes": ""
  },
  {
    "content": "If there are test issues, STOP and review them with the user",
    "status": "pending",
    "priority": "medium",
    "id": "test-review",
    "notes": ""
  },
  {
    "content": "the subagent should STOP work here and return control to you and you should then continue with the following",
    "status": "pending",
    "priority": "medium",
    "id": "code-review-setup",
    "notes": ""
  },
  {
    "content": "task a new subagent to do a code review of the changes in the worktree - tell it to focus on identifying duplication and complexity. Additionally, ask that it focus on validating that the implementation plan was actually implemented. Emphasize that it should only read and analyze, not modify anything.",
    "status": "pending",
    "priority": "medium",
    "id": "code-review-task",
    "notes": ""
  },
  {
    "content": "when this new subagent returns, STOP and review the suggested changes with the user",
    "status": "pending",
    "priority": "medium",
    "id": "code-review-stop",
    "notes": ""
  }
]