[
  {
    "id": "phase1_add_example_variants",
    "content": "Phase 1: Add new types - Add example_variants field to MutationPath struct",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase1_add_enum_variant_info",
    "content": "Phase 1: Add new EnumVariantInfo enum alongside existing struct (both coexist)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase1_build_check",
    "content": "Run cargo build && cargo +nightly fmt after Phase 1 additions",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase2_extract_tuple_types",
    "content": "Phase 2: Add helper functions - extract_tuple_types with depth parameter",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase2_extract_struct_fields",
    "content": "Phase 2: Add extract_struct_fields helper function with depth parameter",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase2_from_schema_variant",
    "content": "Phase 2: Add EnumVariantInfo::from_schema_variant() constructor method",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase2_build_example",
    "content": "Phase 2: Add EnumVariantInfo::build_example() method",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase2_build_all_enum_examples",
    "content": "Phase 2: Add build_all_enum_examples function",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase2_build_check",
    "content": "Run cargo build && cargo +nightly fmt after Phase 2 helpers",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase3_extract_enum_variants_new",
    "content": "Phase 3: Add extract_enum_variants_new function alongside existing one",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase3_clippy_check",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase4_update_from_mutation_path",
    "content": "Phase 4: Update MutationPath::from_mutation_path to populate example_variants for enums",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase4_compute_enum_variants",
    "content": "Phase 4: Add compute_enum_variants method to MutationPath",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase4_pattern_matching",
    "content": "Phase 4: Update all enum processing to use new EnumVariantInfo enum with pattern matching",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase4_build_check",
    "content": "Run cargo build && cargo +nightly fmt after Phase 4 updates",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase4_verify_tests",
    "content": "Verify all tests pass with both old and new code paths working",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase5_serde_getter",
    "content": "Phase 5: Add serde getter attribute to enum_variants field in MutationPath",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase5_private_field",
    "content": "Phase 5: Change enum_variants field visibility from pub to private",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase5_remove_old_struct",
    "content": "Phase 5: Remove old EnumVariantInfoOld struct",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase5_remove_enum_variant_kind",
    "content": "Phase 5: Remove EnumVariantKind enum entirely",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase5_rename_functions",
    "content": "Phase 5: Delete old extract_enum_variants and rename new version",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase5_update_call_sites",
    "content": "Phase 5: Update all remaining call sites to use new signatures",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase5_build_check",
    "content": "Run cargo build && cargo +nightly fmt after Phase 5 removals",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase5_clippy_final",
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase6_nextest",
    "content": "Phase 6: Run cargo nextest run to verify all functionality",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase6_test_anchor",
    "content": "Phase 6: Test with Anchor enum to verify multiple examples generated",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "phase6_cleanup",
    "content": "Phase 6: Clean up any temporary compatibility code",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "final_test_check",
    "content": "STOP if test failures - review with user",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "final_stop",
    "content": "Subagent: STOP and return control",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "code_review",
    "content": "Main: Task new subagent for code review (read-only)",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "review_with_user",
    "content": "Review suggestions with user",
    "status": "pending",
    "priority": "high",
    "notes": ""
  }
]