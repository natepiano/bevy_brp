[
  {
    "id": "1",
    "content": "META: Do not deviate from the plan - if unsure, STOP and ask for guidance",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "2",
    "content": "Add TypeDiscoveryResponse struct to extras for clear, factual responses",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "3",
    "content": "Build extras and fix any compile errors/warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "4",
    "content": "Update extras discover_format handler to use new response structure",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "5",
    "content": "Build extras and fix any compile errors/warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "6",
    "content": "Implement recursive example generation for nested types in extras",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "7",
    "content": "Build extras and fix any compile errors/warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "8",
    "content": "Remove all placeholder generation patterns from extras",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "9",
    "content": "Build extras and fix any compile errors/warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "10",
    "content": "Run cargo clippy on extras - fix any issues",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "11",
    "content": "Update MCP tier_execution to handle new discovery response format",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "12",
    "content": "Build MCP and fix any compile errors/warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "13",
    "content": "Implement quality detection to filter out placeholders in MCP",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "14",
    "content": "Build MCP and fix any compile errors/warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "15",
    "content": "Update hint generation to use discovery facts in MCP",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "16",
    "content": "Build MCP and fix any compile errors/warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "17",
    "content": "Enhance enum field access error detection in MCP",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "18",
    "content": "Build MCP and fix any compile errors/warnings",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "19",
    "content": "Run cargo clippy on MCP - fix any issues",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "20",
    "content": "Run cargo +nightly fmt on entire workspace",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "21",
    "content": "Run cargo nextest run - review any test failures",
    "status": "pending",
    "priority": "high",
    "notes": ""
  },
  {
    "id": "22",
    "content": "Run code review subagent to validate implementation",
    "status": "pending",
    "priority": "high",
    "notes": ""
  }
]