[
  {
    "sequence_number": 1,
    "content": "Context: Refactoring tools to use ToolFn derive macro - eliminates boilerplate by generating standard ToolFn impl",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 2,
    "content": "Requirements: 1) Params struct needs Clone derive, 2) handle_impl must be async fn taking full params struct, 3) Apply #[derive(ToolFn)] with #[tool_fn(params=\"...\", output=\"...\")]",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 3,
    "content": "Refactor BrpStopWatch: Add Clone to StopWatchParams, add ToolFn import, replace impl with derive, change handle_impl(params.watch_id) to handle_impl(params: StopWatchParams), make async",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 4,
    "content": "Run cargo build after BrpStopWatch changes",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 5,
    "content": "Refactor BevyListWatch: Add Clone to ListWatchParams, add ToolFn import, replace impl, change handle_impl(params.entity, port) to handle_impl(params: ListWatchParams), make async",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 6,
    "content": "Run cargo build after BevyListWatch changes",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 7,
    "content": "Refactor BevyGetWatch: Add Clone to GetWatchParams, add ToolFn import, replace impl, change handle_impl(params.entity, Some(params.types.clone()), port) to handle_impl(params: GetWatchParams), make async",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 8,
    "content": "Run cargo build after BevyGetWatch changes",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 9,
    "content": "Refactor DeleteLogs: Add Clone to DeleteLogsParams, add ToolFn import, replace impl, change handle_impl(params.app_name.as_deref(), params.older_than_seconds) to handle_impl(params: DeleteLogsParams), make async if not already",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 10,
    "content": "Run cargo build after DeleteLogs changes",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 11,
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 12,
    "content": "Fix any clippy issues without using #[allow(dead_code)] or underscore prefixes",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 13,
    "content": "Refactor ListLogs: Add Clone to ListLogsParams, add ToolFn import, replace impl, refactor to use handle_impl(params: ListLogsParams) instead of custom logic, make async",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 14,
    "content": "Run cargo build after ListLogs changes",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 15,
    "content": "Refactor ReadLog: Add Clone to ReadLogParams, add ToolFn import, replace impl, change handle_impl(&params.filename, params.keyword.as_deref(), tail_lines) to handle_impl(params: ReadLogParams), make async",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 16,
    "content": "Run cargo build after ReadLog changes",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 17,
    "content": "Refactor ListBevyApps: Add Clone to params struct, add ToolFn import, replace impl with derive, ensure handle_impl takes full params struct, make async",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 18,
    "content": "Run cargo build after ListBevyApps changes",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 19,
    "content": "Refactor ListBrpApps: Add Clone to params struct, add ToolFn import, replace impl with derive, ensure handle_impl takes full params struct, make async",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 20,
    "content": "Run cargo build after ListBrpApps changes",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 21,
    "content": "Refactor ListBevyExamples: Add Clone to params struct, add ToolFn import, replace impl with derive, ensure handle_impl takes full params struct, make async",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 22,
    "content": "Run cargo build after ListBevyExamples changes",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 23,
    "content": "Run cargo clippy --workspace --all-targets --all-features -- -D warnings",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 24,
    "content": "Fix any clippy issues without using #[allow(dead_code)] or underscore prefixes",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 25,
    "content": "Refactor GetTraceLogPath: Add Clone to params struct if exists, add ToolFn import, replace impl with derive, ensure handle_impl takes params struct, make async",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 26,
    "content": "Run cargo build after GetTraceLogPath changes",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 27,
    "content": "Refactor BrpListActiveWatches: Add Clone to params struct if exists, add ToolFn import, replace impl with derive, ensure handle_impl takes params struct, make async",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 28,
    "content": "Run cargo build after BrpListActiveWatches changes",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 29,
    "content": "Review BrpExecute: Check if it can use standard pattern or needs special handling due to complex parameter handling",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 30,
    "content": "Run ~/.claude/commands/bash/build-check.sh for final comprehensive check",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 31,
    "content": "Run cargo +nightly fmt to format all changes",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 32,
    "content": "Run cargo nextest run to verify no tests broken",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 33,
    "content": "STOP if test failures - review with user",
    "status": "pending",
    "notes": ""
  },
  {
    "sequence_number": 34,
    "content": "Subagent: STOP and return control",
    "status": "pending",
    "notes": ""
  }
]