{
  "excluded_types": [
    {
      "type_name": "bevy_ecs::hierarchy::ChildOf",
      "reason": "Immutable type - causes panic when mutated. Bevy's immutable types are not properly reflected yet; query says it supports mutation but it doesn't."
    },
    {
      "type_name": "bevy_render::view::window::screenshot::Screenshot",
      "reason": "Ephemeral component - only exists during screenshot operations. Not suitable for mutation testing as it's immediately consumed."
    },
    {
      "type_name": "bevy_scene::components::DynamicSceneRoot",
      "reason": "Component not present in extras_plugin test app - only added when spawning dynamic scenes."
    },
    {
      "type_name": "bevy_ui::ui_node::CalculatedClip",
      "reason": "Auto-generated internal component. Only created by Bevy's UI clipping system on child nodes when parent has overflow clipping enabled. Cannot be spawned/inserted. Requires specific UI hierarchy not present in test scene."
    },
    {
      "type_name": "bevy_anti_alias::contrast_adaptive_sharpening::DenoiseCas",
      "reason": "Render-world-only component. Automatically extracted from ContrastAdaptiveSharpening via ExtractComponent trait and only exists in the render world, not the main world. BRP can only query the main world, so this component is fundamentally not accessible."
    },
    {
      "type_name": "bevy_ecs::observer::distributed_storage::ObservedBy",
      "reason": "Internal ECS component. Automatically managed by Bevy's observer system to track which observers are watching an entity. Not user-spawnable and only added when observers are registered."
    },
    {
      "type_name": "bevy_picking::hover::DirectlyHovered",
      "reason": "Immutable component (marked with #[component(immutable)]). Automatically managed by Bevy's picking system based on HoverMap. Cannot be mutated through reflection - ComponentInfo::mutable() returns false, but this information is not exposed through BRP registry.schema."
    },
    {
      "type_name": "bevy_picking::hover::Hovered",
      "reason": "Immutable component (marked with #[component(immutable)]). Automatically managed by Bevy's picking system based on HoverMap and entity hierarchy. Cannot be mutated through reflection - ComponentInfo::mutable() returns false, but this information is not exposed through BRP registry.schema."
    },
    {
      "type_name": "bevy_pbr::wireframe::Mesh3dWireframe",
      "reason": "Handle wrapper component. TupleStruct wrapper around Handle<WireframeMaterial> which lacks ReflectDeserialize type data. Not mutable through BRP - mutation_status is 'not_mutable' due to handle_wrapper_component restriction. No mutation paths available for testing."
    },
    {
      "type_name": "bevy_sprite_render::mesh2d::material::MeshMaterial2d<bevy_sprite_render::tilemap_chunk::tilemap_chunk_material::TilemapChunkMaterial>",
      "reason": "Handle wrapper component. TupleStruct wrapper around Handle<TilemapChunkMaterial> which lacks ReflectDeserialize type data. Not mutable through BRP - mutation_status is 'not_mutable' due to handle_wrapper_component restriction. No mutation paths available for testing."
    },
    {
      "type_name": "bevy_sprite_render::mesh2d::wireframe2d::Mesh2dWireframe",
      "reason": "Handle wrapper component. TupleStruct wrapper around Handle<Wireframe2dMaterial> which lacks ReflectDeserialize type data. Not mutable through BRP - mutation_status is 'not_mutable' due to handle_wrapper_component restriction. No mutation paths available for testing."
    },
    {
      "type_name": "bevy_sprite_render::tilemap_chunk::TilemapChunk",
      "reason": "Immutable component. Does not have #[reflect(Component)] configured to allow mutations through reflection. All mutation attempts panic with: 'Cannot call ReflectComponent::reflect_mut on component TilemapChunk. It is immutable, and cannot modified through reflection'."
    },
    {
      "type_name": "bevy_camera::components::Camera3d",
      "reason": "Spawning Camera3d causes rendering system conflicts and panics in extras_plugin test app. Creates camera order ambiguities with existing cameras and triggers wgpu validation error: 'Texture binding 3 expects dimension = D3, but given a view with dimension = D2' in mesh_view_bind_group. Camera components require complete camera setup (Camera, Transform, render targets) that cannot be properly initialized via dynamic spawn."
    },
    {
      "type_name": "bevy_core_pipeline::skybox::Skybox",
      "reason": "Root path mutation to Default value causes app crash. The component contains Handle<Image> with Strong variant (Arc<StrongHandle>) that lacks ReflectSerialize registration, making it impossible to serialize/deserialize through BRP. Additionally, Default value creates invalid texture state - skybox shader expects Cube texture dimension but Default provides D2, causing wgpu validation panic: 'Texture binding 0 expects dimension = Cube, but given a view with dimension = D2' in prepare_skybox_bind_groups system."
    }
  ]
}
