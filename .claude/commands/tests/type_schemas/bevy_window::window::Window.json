{
  "type_name": "bevy_window::window::Window",
  "has_deserialize": true,
  "has_serialize": true,
  "in_registry": true,
  "mutation_paths": {
    ".canvas": {
      "description": "Mutate the canvas field of bevy_window::window::Window",
      "example_none": null,
      "example_some": "Hello, World!",
      "note": "For Option fields: pass the value directly to set Some, null to set None",
      "path_kind": "StructField",
      "type": "core::option::Option<alloc::string::String>"
    },
    ".clip_children": {
      "description": "Mutate the clip_children field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".composite_alpha_mode": {
      "description": "Mutate the composite_alpha_mode field of bevy_window::window::Window",
      "enum_variants": [
        "Auto",
        "Opaque",
        "PreMultiplied",
        "PostMultiplied",
        "Inherit"
      ],
      "example": "Auto",
      "path_kind": "StructField",
      "type": "bevy_window::window::CompositeAlphaMode"
    },
    ".cursor_options": {
      "description": "Mutate the cursor_options field of bevy_window::window::Window",
      "path_kind": "StructField",
      "type": "bevy_window::window::CursorOptions"
    },
    ".cursor_options.grab_mode": {
      "description": "Mutate the grab_mode component of cursor_options (type: bevy_window::window::CursorGrabMode)",
      "enum_variants": [
        "None",
        "Confined",
        "Locked"
      ],
      "example": "None",
      "path_kind": "NestedPath",
      "type": "bevy_window::window::CursorGrabMode"
    },
    ".cursor_options.hit_test": {
      "description": "Mutate the hit_test component of cursor_options (type: bool)",
      "example": true,
      "path_kind": "NestedPath",
      "type": "bool"
    },
    ".cursor_options.visible": {
      "description": "Mutate the visible component of cursor_options (type: bool)",
      "example": true,
      "path_kind": "NestedPath",
      "type": "bool"
    },
    ".decorations": {
      "description": "Mutate the decorations field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".desired_maximum_frame_latency": {
      "description": "Mutate the desired_maximum_frame_latency field of bevy_window::window::Window",
      "enum_variants": [
        "None",
        "Some"
      ],
      "example_none": null,
      "example_some": "None",
      "note": "For Option fields: pass the value directly to set Some, null to set None",
      "path_kind": "StructField",
      "type": "core::option::Option<core::num::NonZeroU32>"
    },
    ".enabled_buttons": {
      "description": "Mutate the enabled_buttons field of bevy_window::window::Window",
      "path_kind": "StructField",
      "type": "bevy_window::window::EnabledButtons"
    },
    ".enabled_buttons.close": {
      "description": "Mutate the close component of enabled_buttons (type: bool)",
      "example": true,
      "path_kind": "NestedPath",
      "type": "bool"
    },
    ".enabled_buttons.maximize": {
      "description": "Mutate the maximize component of enabled_buttons (type: bool)",
      "example": true,
      "path_kind": "NestedPath",
      "type": "bool"
    },
    ".enabled_buttons.minimize": {
      "description": "Mutate the minimize component of enabled_buttons (type: bool)",
      "example": true,
      "path_kind": "NestedPath",
      "type": "bool"
    },
    ".fit_canvas_to_parent": {
      "description": "Mutate the fit_canvas_to_parent field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".focused": {
      "description": "Mutate the focused field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".fullsize_content_view": {
      "description": "Mutate the fullsize_content_view field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".has_shadow": {
      "description": "Mutate the has_shadow field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".ime_enabled": {
      "description": "Mutate the ime_enabled field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".ime_position": {
      "description": "Mutate the ime_position field of bevy_window::window::Window",
      "example": [
        1.0,
        2.0
      ],
      "path_kind": "StructField",
      "type": "glam::Vec2"
    },
    ".ime_position.x": {
      "description": "Mutate the x component of ime_position (type: f32)",
      "example": 1.0,
      "path_kind": "NestedPath",
      "type": "f32"
    },
    ".ime_position.y": {
      "description": "Mutate the y component of ime_position (type: f32)",
      "example": 2.0,
      "path_kind": "NestedPath",
      "type": "f32"
    },
    ".internal": {
      "description": "Mutate the internal field of bevy_window::window::Window",
      "path_kind": "StructField",
      "type": "bevy_window::window::InternalWindowState"
    },
    ".internal.drag_move_request": {
      "description": "Mutate the drag_move_request component of internal (type: bool)",
      "example": true,
      "path_kind": "NestedPath",
      "type": "bool"
    },
    ".internal.drag_resize_request": {
      "description": "Mutate the drag_resize_request component of internal (type: core::option::Option<bevy_math::compass::CompassOctant>)",
      "enum_variants": [
        "None",
        "Some"
      ],
      "example_none": null,
      "example_some": "None",
      "note": "For Option fields: pass the value directly to set Some, null to set None",
      "path_kind": "NestedPath",
      "type": "core::option::Option<bevy_math::compass::CompassOctant>"
    },
    ".internal.maximize_request": {
      "description": "Mutate the maximize_request component of internal (type: core::option::Option<bool>)",
      "example_none": null,
      "example_some": true,
      "note": "For Option fields: pass the value directly to set Some, null to set None",
      "path_kind": "NestedPath",
      "type": "core::option::Option<bool>"
    },
    ".internal.minimize_request": {
      "description": "Mutate the minimize_request component of internal (type: core::option::Option<bool>)",
      "example_none": null,
      "example_some": true,
      "note": "For Option fields: pass the value directly to set Some, null to set None",
      "path_kind": "NestedPath",
      "type": "core::option::Option<bool>"
    },
    ".internal.physical_cursor_position": {
      "description": "Mutate the physical_cursor_position component of internal (type: core::option::Option<glam::DVec2>)",
      "enum_variants": [
        "None",
        "Some"
      ],
      "example_none": null,
      "example_some": "None",
      "note": "For Option fields: pass the value directly to set Some, null to set None",
      "path_kind": "NestedPath",
      "type": "core::option::Option<glam::DVec2>"
    },
    ".mode": {
      "description": "Mutate the mode field of bevy_window::window::Window",
      "enum_variants": [
        "Windowed",
        "BorderlessFullscreen",
        "Fullscreen"
      ],
      "example": "Windowed",
      "path_kind": "StructField",
      "type": "bevy_window::window::WindowMode"
    },
    ".movable_by_window_background": {
      "description": "Mutate the movable_by_window_background field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".name": {
      "description": "Mutate the name field of bevy_window::window::Window",
      "example_none": null,
      "example_some": "Hello, World!",
      "note": "For Option fields: pass the value directly to set Some, null to set None",
      "path_kind": "StructField",
      "type": "core::option::Option<alloc::string::String>"
    },
    ".position": {
      "description": "Mutate the position field of bevy_window::window::Window",
      "enum_variants": [
        "Automatic",
        "Centered",
        "At"
      ],
      "example": "Automatic",
      "path_kind": "StructField",
      "type": "bevy_window::window::WindowPosition"
    },
    ".prefers_home_indicator_hidden": {
      "description": "Mutate the prefers_home_indicator_hidden field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".prefers_status_bar_hidden": {
      "description": "Mutate the prefers_status_bar_hidden field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".present_mode": {
      "description": "Mutate the present_mode field of bevy_window::window::Window",
      "enum_variants": [
        "AutoVsync",
        "AutoNoVsync",
        "Fifo",
        "FifoRelaxed",
        "Immediate",
        "Mailbox"
      ],
      "example": "AutoVsync",
      "path_kind": "StructField",
      "type": "bevy_window::window::PresentMode"
    },
    ".prevent_default_event_handling": {
      "description": "Mutate the prevent_default_event_handling field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".recognize_doubletap_gesture": {
      "description": "Mutate the recognize_doubletap_gesture field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".recognize_pan_gesture": {
      "description": "Mutate the recognize_pan_gesture field of bevy_window::window::Window",
      "enum_variants": [
        "None",
        "Some"
      ],
      "example_none": null,
      "example_some": "None",
      "note": "For Option fields: pass the value directly to set Some, null to set None",
      "path_kind": "StructField",
      "type": "core::option::Option<(u8, u8)>"
    },
    ".recognize_pinch_gesture": {
      "description": "Mutate the recognize_pinch_gesture field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".recognize_rotation_gesture": {
      "description": "Mutate the recognize_rotation_gesture field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".resizable": {
      "description": "Mutate the resizable field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".resize_constraints": {
      "description": "Mutate the resize_constraints field of bevy_window::window::Window",
      "path_kind": "StructField",
      "type": "bevy_window::window::WindowResizeConstraints"
    },
    ".resize_constraints.max_height": {
      "description": "Mutate the max_height component of resize_constraints (type: f32)",
      "example": 3.1415927410125732,
      "path_kind": "NestedPath",
      "type": "f32"
    },
    ".resize_constraints.max_width": {
      "description": "Mutate the max_width component of resize_constraints (type: f32)",
      "example": 3.1415927410125732,
      "path_kind": "NestedPath",
      "type": "f32"
    },
    ".resize_constraints.min_height": {
      "description": "Mutate the min_height component of resize_constraints (type: f32)",
      "example": 3.1415927410125732,
      "path_kind": "NestedPath",
      "type": "f32"
    },
    ".resize_constraints.min_width": {
      "description": "Mutate the min_width component of resize_constraints (type: f32)",
      "example": 3.1415927410125732,
      "path_kind": "NestedPath",
      "type": "f32"
    },
    ".resolution": {
      "description": "Mutate the resolution field of bevy_window::window::Window",
      "path_kind": "StructField",
      "type": "bevy_window::window::WindowResolution"
    },
    ".resolution.physical_height": {
      "description": "Mutate the physical_height component of resolution (type: u32)",
      "example": 4294967295,
      "path_kind": "NestedPath",
      "type": "u32"
    },
    ".resolution.physical_width": {
      "description": "Mutate the physical_width component of resolution (type: u32)",
      "example": 4294967295,
      "path_kind": "NestedPath",
      "type": "u32"
    },
    ".resolution.scale_factor": {
      "description": "Mutate the scale_factor component of resolution (type: f32)",
      "example": 3.1415927410125732,
      "path_kind": "NestedPath",
      "type": "f32"
    },
    ".resolution.scale_factor_override": {
      "description": "Mutate the scale_factor_override component of resolution (type: core::option::Option<f32>)",
      "example_none": null,
      "example_some": 3.1415927410125732,
      "note": "For Option fields: pass the value directly to set Some, null to set None",
      "path_kind": "NestedPath",
      "type": "core::option::Option<f32>"
    },
    ".skip_taskbar": {
      "description": "Mutate the skip_taskbar field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".title": {
      "description": "Mutate the title field of bevy_window::window::Window",
      "example": "Hello, World!",
      "path_kind": "StructField",
      "type": "alloc::string::String"
    },
    ".titlebar_show_buttons": {
      "description": "Mutate the titlebar_show_buttons field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".titlebar_show_title": {
      "description": "Mutate the titlebar_show_title field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".titlebar_shown": {
      "description": "Mutate the titlebar_shown field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".titlebar_transparent": {
      "description": "Mutate the titlebar_transparent field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".transparent": {
      "description": "Mutate the transparent field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".visible": {
      "description": "Mutate the visible field of bevy_window::window::Window",
      "example": true,
      "path_kind": "StructField",
      "type": "bool"
    },
    ".window_level": {
      "description": "Mutate the window_level field of bevy_window::window::Window",
      "enum_variants": [
        "AlwaysOnBottom",
        "Normal",
        "AlwaysOnTop"
      ],
      "example": "AlwaysOnBottom",
      "path_kind": "StructField",
      "type": "bevy_window::window::WindowLevel"
    },
    ".window_theme": {
      "description": "Mutate the window_theme field of bevy_window::window::Window",
      "enum_variants": [
        "None",
        "Some"
      ],
      "example_none": null,
      "example_some": "None",
      "note": "For Option fields: pass the value directly to set Some, null to set None",
      "path_kind": "StructField",
      "type": "core::option::Option<bevy_window::window::WindowTheme>"
    }
  },
  "schema_info": {
    "crate_name": "bevy_window",
    "module_path": "bevy_window::window",
    "properties": {
      "canvas": {
        "type": {
          "$ref": "#/$defs/core::option::Option<alloc::string::String>"
        }
      },
      "clip_children": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "composite_alpha_mode": {
        "type": {
          "$ref": "#/$defs/bevy_window::window::CompositeAlphaMode"
        }
      },
      "cursor_options": {
        "type": {
          "$ref": "#/$defs/bevy_window::window::CursorOptions"
        }
      },
      "decorations": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "desired_maximum_frame_latency": {
        "type": {
          "$ref": "#/$defs/core::option::Option<core::num::NonZeroU32>"
        }
      },
      "enabled_buttons": {
        "type": {
          "$ref": "#/$defs/bevy_window::window::EnabledButtons"
        }
      },
      "fit_canvas_to_parent": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "focused": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "fullsize_content_view": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "has_shadow": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "ime_enabled": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "ime_position": {
        "type": {
          "$ref": "#/$defs/glam::Vec2"
        }
      },
      "internal": {
        "type": {
          "$ref": "#/$defs/bevy_window::window::InternalWindowState"
        }
      },
      "mode": {
        "type": {
          "$ref": "#/$defs/bevy_window::window::WindowMode"
        }
      },
      "movable_by_window_background": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "name": {
        "type": {
          "$ref": "#/$defs/core::option::Option<alloc::string::String>"
        }
      },
      "position": {
        "type": {
          "$ref": "#/$defs/bevy_window::window::WindowPosition"
        }
      },
      "prefers_home_indicator_hidden": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "prefers_status_bar_hidden": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "present_mode": {
        "type": {
          "$ref": "#/$defs/bevy_window::window::PresentMode"
        }
      },
      "prevent_default_event_handling": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "recognize_doubletap_gesture": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "recognize_pan_gesture": {
        "type": {
          "$ref": "#/$defs/core::option::Option<(u8, u8)>"
        }
      },
      "recognize_pinch_gesture": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "recognize_rotation_gesture": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "resizable": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "resize_constraints": {
        "type": {
          "$ref": "#/$defs/bevy_window::window::WindowResizeConstraints"
        }
      },
      "resolution": {
        "type": {
          "$ref": "#/$defs/bevy_window::window::WindowResolution"
        }
      },
      "skip_taskbar": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "title": {
        "type": {
          "$ref": "#/$defs/alloc::string::String"
        }
      },
      "titlebar_show_buttons": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "titlebar_show_title": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "titlebar_shown": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "titlebar_transparent": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "transparent": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "visible": {
        "type": {
          "$ref": "#/$defs/bool"
        }
      },
      "window_level": {
        "type": {
          "$ref": "#/$defs/bevy_window::window::WindowLevel"
        }
      },
      "window_theme": {
        "type": {
          "$ref": "#/$defs/core::option::Option<bevy_window::window::WindowTheme>"
        }
      }
    },
    "required": [
      "cursor_options",
      "present_mode",
      "mode",
      "position",
      "resolution",
      "title",
      "composite_alpha_mode",
      "resize_constraints",
      "resizable",
      "enabled_buttons",
      "decorations",
      "transparent",
      "focused",
      "window_level",
      "fit_canvas_to_parent",
      "prevent_default_event_handling",
      "internal",
      "ime_enabled",
      "ime_position",
      "visible",
      "skip_taskbar",
      "clip_children",
      "recognize_pinch_gesture",
      "recognize_rotation_gesture",
      "recognize_doubletap_gesture",
      "movable_by_window_background",
      "fullsize_content_view",
      "has_shadow",
      "titlebar_shown",
      "titlebar_transparent",
      "titlebar_show_title",
      "titlebar_show_buttons",
      "prefers_home_indicator_hidden",
      "prefers_status_bar_hidden"
    ],
    "type_kind": "Struct"
  },
  "spawn_format": {
    "canvas": "None",
    "clip_children": true,
    "composite_alpha_mode": "Auto",
    "cursor_options": null,
    "decorations": true,
    "desired_maximum_frame_latency": "None",
    "enabled_buttons": null,
    "fit_canvas_to_parent": true,
    "focused": true,
    "fullsize_content_view": true,
    "has_shadow": true,
    "ime_enabled": true,
    "ime_position": [
      1.0,
      2.0
    ],
    "internal": null,
    "mode": "Windowed",
    "movable_by_window_background": true,
    "name": "None",
    "position": "Automatic",
    "prefers_home_indicator_hidden": true,
    "prefers_status_bar_hidden": true,
    "present_mode": "AutoVsync",
    "prevent_default_event_handling": true,
    "recognize_doubletap_gesture": true,
    "recognize_pan_gesture": "None",
    "recognize_pinch_gesture": true,
    "recognize_rotation_gesture": true,
    "resizable": true,
    "resize_constraints": null,
    "resolution": null,
    "skip_taskbar": true,
    "title": "Hello, World!",
    "titlebar_show_buttons": true,
    "titlebar_show_title": true,
    "titlebar_shown": true,
    "titlebar_transparent": true,
    "transparent": true,
    "visible": true,
    "window_level": "AlwaysOnBottom",
    "window_theme": "None"
  },
  "supported_operations": [
    "query",
    "get",
    "mutate",
    "spawn",
    "insert"
  ]
}