{
  "has_deserialize": true,
  "has_serialize": true,
  "in_registry": true,
  "mutation_paths": {
    "": {
      "description": "Replace the entire TestComplexComponent struct",
      "example": {
        "mode": "Active",
        "optional_value": null,
        "points": [
          [
            1.0,
            2.0,
            3.0
          ],
          [
            1.0,
            2.0,
            3.0
          ]
        ],
        "range": [
          3.1415927410125732,
          3.1415927410125732
        ],
        "transform": {
          "rotation": [
            0.0,
            0.0,
            0.0,
            1.0
          ],
          "scale": [
            1.0,
            2.0,
            3.0
          ],
          "translation": [
            1.0,
            2.0,
            3.0
          ]
        }
      },
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "RootValue",
        "type": "extras_plugin::TestComplexComponent",
        "type_kind": "Struct"
      }
    },
    ".mode": {
      "description": "Mutate the mode field of TestComplexComponent enum",
      "examples": [
        {
          "applicable_variants": [
            "Active",
            "Inactive"
          ],
          "example": "Active",
          "signature": "unit"
        },
        {
          "applicable_variants": [
            "Special"
          ],
          "example": {
            "Special": [
              "Hello, World!",
              1000000
            ]
          },
          "signature": "tuple(String, u32)"
        },
        {
          "applicable_variants": [
            "Custom"
          ],
          "example": {
            "Custom": {
              "enabled": true,
              "name": "Hello, World!",
              "value": 3.1415927410125732
            }
          },
          "signature": "struct{enabled: bool, name: String, value: f32}"
        }
      ],
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "extras_plugin::TestEnumWithSerDe",
        "type_kind": "Enum"
      },
      "variants": [
        "Active",
        "Custom",
        "Inactive",
        "Special"
      ]
    },
    ".mode.0": {
      "description": "Mutate element 0 of TestEnumWithSerDe",
      "example": "Hello, World!",
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "IndexedElement",
        "type": "alloc::string::String",
        "type_kind": "Value"
      },
      "variants": [
        "Special"
      ]
    },
    ".mode.1": {
      "description": "Mutate element 1 of TestEnumWithSerDe",
      "example": 1000000,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "IndexedElement",
        "type": "u32",
        "type_kind": "Value"
      },
      "variants": [
        "Special"
      ]
    },
    ".mode.enabled": {
      "description": "Mutate the enabled field of TestEnumWithSerDe",
      "example": true,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "bool",
        "type_kind": "Value"
      },
      "variants": [
        "Custom"
      ]
    },
    ".mode.name": {
      "description": "Mutate the name field of TestEnumWithSerDe",
      "example": "Hello, World!",
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "alloc::string::String",
        "type_kind": "Value"
      },
      "variants": [
        "Custom"
      ]
    },
    ".mode.value": {
      "description": "Mutate the value field of TestEnumWithSerDe",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "f32",
        "type_kind": "Value"
      },
      "variants": [
        "Custom"
      ]
    },
    ".optional_value": {
      "description": "Mutate the optional_value field of TestComplexComponent enum",
      "examples": [
        {
          "applicable_variants": [
            "None"
          ],
          "example": null,
          "signature": "unit"
        },
        {
          "applicable_variants": [
            "Some"
          ],
          "example": 3.1415927410125732,
          "signature": "tuple(f32)"
        }
      ],
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "core::option::Option<f32>",
        "type_kind": "Enum"
      },
      "variants": [
        "None",
        "Some"
      ]
    },
    ".optional_value.0": {
      "description": "Mutate element 0 of Option",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "IndexedElement",
        "type": "f32",
        "type_kind": "Value"
      },
      "variants": [
        "Some"
      ]
    },
    ".points": {
      "description": "Mutate the points field of TestComplexComponent array",
      "example": [
        [
          1.0,
          2.0,
          3.0
        ],
        [
          1.0,
          2.0,
          3.0
        ]
      ],
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "[glam::Vec3; 2]",
        "type_kind": "Array"
      }
    },
    ".points[0]": {
      "description": "Mutate element [0] of [Vec3; 2] struct",
      "example": [
        1.0,
        2.0,
        3.0
      ],
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "ArrayElement",
        "type": "glam::Vec3",
        "type_kind": "Struct"
      }
    },
    ".points[0].x": {
      "description": "Mutate the x field of Vec3",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "f32",
        "type_kind": "Value"
      }
    },
    ".points[0].y": {
      "description": "Mutate the y field of Vec3",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "f32",
        "type_kind": "Value"
      }
    },
    ".points[0].z": {
      "description": "Mutate the z field of Vec3",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "f32",
        "type_kind": "Value"
      }
    },
    ".range": {
      "description": "Mutate the range field of TestComplexComponent tuple",
      "example": [
        3.1415927410125732,
        3.1415927410125732
      ],
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "(f32, f32)",
        "type_kind": "Tuple"
      }
    },
    ".range.0": {
      "description": "Mutate element 0 of (f32, f32)",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "IndexedElement",
        "type": "f32",
        "type_kind": "Value"
      }
    },
    ".range.1": {
      "description": "Mutate element 1 of (f32, f32)",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "IndexedElement",
        "type": "f32",
        "type_kind": "Value"
      }
    },
    ".transform": {
      "description": "Mutate the transform field of TestComplexComponent struct",
      "example": {
        "rotation": [
          0.0,
          0.0,
          0.0,
          1.0
        ],
        "scale": [
          1.0,
          2.0,
          3.0
        ],
        "translation": [
          1.0,
          2.0,
          3.0
        ]
      },
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "bevy_transform::components::transform::Transform",
        "type_kind": "Struct"
      }
    },
    ".transform.rotation": {
      "description": "Mutate the rotation field of Transform struct",
      "example": [
        0.0,
        0.0,
        0.0,
        1.0
      ],
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "glam::Quat",
        "type_kind": "Struct"
      }
    },
    ".transform.rotation.w": {
      "description": "Mutate the w field of Quat",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "f32",
        "type_kind": "Value"
      }
    },
    ".transform.rotation.x": {
      "description": "Mutate the x field of Quat",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "f32",
        "type_kind": "Value"
      }
    },
    ".transform.rotation.y": {
      "description": "Mutate the y field of Quat",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "f32",
        "type_kind": "Value"
      }
    },
    ".transform.rotation.z": {
      "description": "Mutate the z field of Quat",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "f32",
        "type_kind": "Value"
      }
    },
    ".transform.scale": {
      "description": "Mutate the scale field of Transform struct",
      "example": [
        1.0,
        2.0,
        3.0
      ],
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "glam::Vec3",
        "type_kind": "Struct"
      }
    },
    ".transform.scale.x": {
      "description": "Mutate the x field of Vec3",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "f32",
        "type_kind": "Value"
      }
    },
    ".transform.scale.y": {
      "description": "Mutate the y field of Vec3",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "f32",
        "type_kind": "Value"
      }
    },
    ".transform.scale.z": {
      "description": "Mutate the z field of Vec3",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "f32",
        "type_kind": "Value"
      }
    },
    ".transform.translation": {
      "description": "Mutate the translation field of Transform struct",
      "example": [
        1.0,
        2.0,
        3.0
      ],
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "glam::Vec3",
        "type_kind": "Struct"
      }
    },
    ".transform.translation.x": {
      "description": "Mutate the x field of Vec3",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "f32",
        "type_kind": "Value"
      }
    },
    ".transform.translation.y": {
      "description": "Mutate the y field of Vec3",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "f32",
        "type_kind": "Value"
      }
    },
    ".transform.translation.z": {
      "description": "Mutate the z field of Vec3",
      "example": 3.1415927410125732,
      "path_info": {
        "mutation_status": "mutable",
        "path_kind": "StructField",
        "type": "f32",
        "type_kind": "Value"
      }
    }
  },
  "schema_info": {
    "crate_name": "extras_plugin",
    "module_path": "extras_plugin",
    "properties": {
      "mode": {
        "type": {
          "$ref": "#/$defs/extras_plugin::TestEnumWithSerDe"
        }
      },
      "optional_value": {
        "type": {
          "$ref": "#/$defs/core::option::Option<f32>"
        }
      },
      "points": {
        "type": {
          "$ref": "#/$defs/[glam::Vec3; 2]"
        }
      },
      "range": {
        "type": {
          "$ref": "#/$defs/(f32, f32)"
        }
      },
      "transform": {
        "type": {
          "$ref": "#/$defs/bevy_transform::components::transform::Transform"
        }
      }
    },
    "required": [
      "transform",
      "mode",
      "points",
      "range"
    ],
    "type_kind": "Struct"
  },
  "spawn_format": {
    "mode": "Active",
    "optional_value": null,
    "points": [
      [
        1.0,
        2.0,
        3.0
      ],
      [
        1.0,
        2.0,
        3.0
      ]
    ],
    "range": [
      3.1415927410125732,
      3.1415927410125732
    ],
    "transform": {
      "rotation": [
        0.0,
        0.0,
        0.0,
        1.0
      ],
      "scale": [
        1.0,
        2.0,
        3.0
      ],
      "translation": [
        1.0,
        2.0,
        3.0
      ]
    }
  },
  "supported_operations": [
    "query",
    "get",
    "spawn",
    "insert",
    "mutate"
  ],
  "type_name": "extras_plugin::TestComplexComponent",
  "batch_number": null,
  "test_status": "untested",
  "fail_reason": ""
}
