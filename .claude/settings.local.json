{
  "permissions": {
    "allow": [
      "Bash(/Applications/Zed.app/Contents/MacOS/cli:*)",
      "Bash(/dev/null)",
      "Bash(/Users/natemccoy/.claude/scripts/bevy_migration_count_pattern.sh:*)",
      "Bash(/Users/natemccoy/rust/bevy_brp/.claude/scripts/get_type_guide.sh:*)",
      "Bash(/Users/natemccoy/rust/bevy_brp/.claude/scripts/mutation_test/operation_manager.py --action get-next)",
      "Bash(/Users/natemccoy/rust/bevy_brp/.claude/scripts/mutation_test_subagent_log.sh: *)",
      "Bash(/Users/natemccoy/rust/bevy_brp/.claude/scripts/type_guide_test_extract.sh /var/folders/rf/twhh0jfd243fpltn5k0w1t980000gn/T/mcp_response_brp_type_guide1758306170.json summary)",
      "Bash(/Users/natemccoy/rust/bevy_brp/.claude/scripts/type_guide_test_extract.sh:*)",
      "Bash(\"/Users/natemccoy/rust/bevy_brp\" rust)",
      "Bash(./.claude/commands/mutation_test.sh:*)",
      "Bash(./.claude/scripts/get_mutation_path.sh:*)",
      "Bash(./.claude/scripts/get_type_guide.sh:*)",
      "Bash(./.claude/scripts/integration_tests/query_validate.sh:*)",
      "Bash(./.claude/scripts/mutation_test_merge_batch_results.sh:*)",
      "Bash(./.claude/scripts/mutation_test_renumber_batches.sh:*)",
      "Bash(./.claude/scripts/mutation_test_single_type.sh:*)",
      "Bash(.claude/scripts/compare_mutation_path_validate_args.sh:*)",
      "Bash(.claude/scripts/create_mutation_test_json/augment_response.sh:*)",
      "Bash(.claude/scripts/create_mutation_test_json/compare_mutation_path.sh:*)",
      "Bash(.claude/scripts/create_mutation_test_json/create_mutation_test_json_validate_directory.sh:*)",
      "Bash(.claude/scripts/create_mutation_test_json/preserve_test_metadata.sh:*)",
      "Bash(.claude/scripts/create_mutation_test_json/promote_baseline.sh:*)",
      "Bash(.claude/scripts/create_mutation_test_json/validate_directory.sh:*)",
      "Bash(.claude/scripts/extras_test_poll_screenshot.sh:*)",
      "Bash(.claude/scripts/get_mutation_path.sh:*)",
      "Bash(.claude/scripts/get_mutation_path_list.sh:*)",
      "Bash(.claude/scripts/get_type_guide.sh:*)",
      "Bash(.claude/scripts/get_type_kind.sh:*)",
      "Bash(.claude/scripts/integration_test_launch_retry.sh:*)",
      "Bash(.claude/scripts/integration_tests/query_validate.sh:*)",
      "Bash(.claude/scripts/type_guide_test_extract.sh:*)",
      "Bash(awk:*)",
      "Bash(bash --version)",
      "Bash(bash:*)",
      "Bash(cargo build:*)",
      "Bash(cargo metadata:*)",
      "Bash(cargo:*)",
      "Bash(cat:*)",
      "Bash(chmod:*)",
      "Bash(claude --version)",
      "Bash(cmp:*)",
      "Bash(cp:*)",
      "Bash(diff:*)",
      "Bash(do python3 .claude/scripts/create_mutation_test_json/read_comparison.py structural_next)",
      "Bash(done)",
      "Bash(du:*)",
      "Bash(echo:*)",
      "Bash(exit 1)",
      "Bash(fi)",
      "Bash(find:*)",
      "Bash(for:*)",
      "Bash(gh api:*)",
      "Bash(gh issue view:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(git -C:*)",
      "Bash(git add:*)",
      "Bash(git branch:*)",
      "Bash(git commit:*)",
      "Bash(git diff:*)",
      "Bash(git fetch:*)",
      "Bash(git grep:*)",
      "Bash(git log:*)",
      "Bash(git rev-parse:*)",
      "Bash(git rm:*)",
      "Bash(git stash:*)",
      "Bash(git tag:*)",
      "Bash(git worktree:*)",
      "Bash(grep:*)",
      "Bash(head:*)",
      "Bash(jq:*)",
      "Bash(kill:*)",
      "Bash(killall:*)",
      "Bash(ls:*)",
      "Bash(lsof:*)",
      "Bash(mcp__brp__brp_launch_bevy_example:*)",
      "Bash(mcp__brp__brp_list_brp_apps:*)",
      "Bash(mcp__brp__brp_status:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(pkill:*)",
      "Bash(ps:*)",
      "Bash(python3:*)",
      "Bash(rg:*)",
      "Bash(rm:*)",
      "Bash(rustc:*)",
      "Bash(sort:*)",
      "Bash(tail:*)",
      "Bash(tee:*)",
      "Bash(test:*)",
      "Bash(then)",
      "Bash(touch:*)",
      "Bash(xargs:*)",
      "Bash(zed:*)",
      "Bash(zoxide query:*)",
      "Bash(~/.claude/commands/bash/post-tool-use-random-ack.sh)",
      "Bash(~/.claude/scripts/bevy_migration_count_pattern.sh:*)",
      "Bash(~/.claude/scripts/bevy_migration_dependency_check.py:*)",
      "Bash(~/.claude/scripts/bevy_migration_ensure_repo.sh:*)",
      "Bash(~/.claude/scripts/bevy_migration_get_tranche.py:*)",
      "Bash(~/.claude/scripts/bevy_migration_verify_guides.sh:*)",
      "Bash(~/.claude/scripts/orphans.py)",
      "Bash(~/.claude/scripts/post-tool-use-cargo-check.sh)",
      "Bash(~/.local/bin/basedpyright:*)",
      "Read(//**)",
      "SlashCommand(/create_mutation_test_json)",
      "SlashCommand(/get_guide_baseline:*)",
      "mcp__brp__brp_all_type_guides",
      "mcp__brp__brp_delete_logs",
      "mcp__brp__brp_execute",
      "mcp__brp__brp_extras_screenshot",
      "mcp__brp__brp_extras_send_keys",
      "mcp__brp__brp_extras_set_window_title",
      "mcp__brp__brp_get_trace_log_path",
      "mcp__brp__brp_launch_bevy_app",
      "mcp__brp__brp_launch_bevy_example",
      "mcp__brp__brp_list_active_watches",
      "mcp__brp__brp_list_bevy_apps",
      "mcp__brp__brp_list_bevy_examples",
      "mcp__brp__brp_list_brp_apps",
      "mcp__brp__brp_list_logs",
      "mcp__brp__brp_read_log",
      "mcp__brp__brp_set_tracing_level",
      "mcp__brp__brp_shutdown",
      "mcp__brp__brp_status",
      "mcp__brp__brp_stop_watch",
      "mcp__brp__brp_type_guide",
      "mcp__brp__world_despawn_entity",
      "mcp__brp__world_get_components",
      "mcp__brp__world_get_components_watch",
      "mcp__brp__world_get_resources",
      "mcp__brp__world_insert_components",
      "mcp__brp__world_insert_resources",
      "mcp__brp__world_list_components",
      "mcp__brp__world_list_components_watch",
      "mcp__brp__world_list_resources",
      "mcp__brp__world_mutate_components",
      "mcp__brp__world_mutate_resources",
      "mcp__brp__world_query",
      "mcp__brp__world_remove_components",
      "mcp__brp__world_remove_resources",
      "mcp__brp__world_reparent_entities",
      "mcp__brp__world_spawn_entity",
      "WebFetch(domain:*)",
      "WebSearch",
      "WebFetch(domain:blog.rust-lang.org)",
      "WebFetch(domain:releases.rs)",
      "WebFetch(domain:poignardazur.github.io)",
      "WebFetch(domain:internals.rust-lang.org)",
      "Bash(git push:*)"
    ],
    "deny": [
      "Bash(sed:*)",
      "Bash(cat >:*)"
    ],
    "ask": [],
    "additionalDirectories": [
      "/Users/natemccoy/rust/bevy",
      "/Users/natemccoy/rust"
    ]
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/mutation-tester-prevent-for-loop.sh"
          }
        ]
      },
      {
        "matcher": "mcp__brp__world_query",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/mutation-tester-prevent-double-serialization.sh"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "mcp__brp__world_spawn_entity|mcp__brp__world_mutate_components|mcp__brp__world_mutate_resources|mcp__brp__world_insert_resources|mcp__brp__world_query",
        "hooks": [
          {
            "type": "command",
            "command": ".claude/hooks/post-tool-mutation-update.sh"
          }
        ]
      }
    ]
  }
}
