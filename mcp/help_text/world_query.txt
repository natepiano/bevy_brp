Queries entities via world.query BRP method. Searches entities by components, applies filters, returns data.

## How to Call

```
mcp__brp__world_query(data={}, filter={"with": ["bevy_transform::components::transform::Transform"]})
```

**IMPORTANT**: Pass parameters as objects, NOT strings. Use `filter={"with": [...]}` NOT `filter='{"with": [...]}'`

### notes on data parameter
**REQUIRED** - Specifies what components to retrieve from matching entities.
```json
{
  "components": ["bevy_transform::components::transform::Transform"],
  "option": ["bevy_sprite::sprite::Sprite"],  // or "all" to get all components
  "has": ["bevy_render::camera::camera::Camera"]
}
```

**Special case**: Use `"data": {}` to get only entity IDs without any component data.

Fields (all optional within the data object):
- `components`: Array of components to always retrieve (query fails if not present)
- `option`: Components to retrieve if present (optional components). Can be:
  - Array of component paths: `["bevy_sprite::sprite::Sprite", "bevy_transform::components::transform::Transform"]`
  - `"all"` to select all components on matching entities
- `has`: Array of components to check existence (returns true/false, not the data)

### notes on filter parameter
Specifies which entities to include based on whether they have specified components:
```json
{
  "with": ["bevy_transform::components::transform::Transform", "bevy_render::camera::camera::Camera"],
  "without": ["bevy_ui::node::Node"]
}
```

Fields:
- `with`: Array of components that entities must have
- `without`: Array of components that entities must NOT have

## Examples

Query entity IDs only for all entities with Transform (no component data):
```json
{
  "data": {},
  "filter": {
    "with": ["bevy_transform::components::transform::Transform"]
  }
}
```

Get Transform and optional Sprite from all cameras:
```json
{
  "data": {
    "components": ["bevy_transform::components::transform::Transform"],
    "option": ["bevy_sprite::sprite::Sprite"]
  },
  "filter": {
    "with": ["bevy_render::camera::camera::Camera"]
  }
}
```

Find entities with Sprite but without UI nodes (entity IDs only):
```json
{
  "data": {},
  "filter": {
    "with": ["bevy_sprite::sprite::Sprite"],
    "without": ["bevy_ui::node::Node"]
  }
}
```

Get all components from entities with Transform:
```json
{
  "data": {
    "option": "all"
  },
  "filter": {
    "with": ["bevy_transform::components::transform::Transform"]
  }
}
```

## Notes
- Component type names must be fully-qualified (e.g., `bevy_transform::components::transform::Transform`)
- Requires components to be registered with BRP reflection
