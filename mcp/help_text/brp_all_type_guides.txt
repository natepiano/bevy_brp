Get type schemas for all registered types in a running Bevy application.

This tool combines the functionality of `world.list_components` and `brp_type_guide` to fetch schemas for all registered component types in a single convenient call. It's particularly useful for coding agents to discover all available types and their formats without multiple round trips.

The tool:
1. Calls `world.list_components` without an entity parameter to get all registered types
2. Uses the TypeSchemaEngine to fetch the complete registry
3. Generates type schema information for every registered type

Returns comprehensive type information including:
- spawn_format: Example JSON structure for `world.spawn_entity`, `world.insert_components`, and `world.insert_resources` operations
- mutation_info: Available mutation paths for `world.mutate_components` and `world.mutate_resources` operations
- schema_info.reflect_types: Array of reflection traits on this type (Component, Resource, Default, etc.)

Check schema_info.reflect_types array to determine type capabilities:
- Contains "Component" → supports Query, Get, Spawn, Insert operations (+ Mutate if mutable fields exist)
- Contains "Resource" → supports Query, Get, Insert operations (+ Mutate if mutable fields exist)

This is especially useful for:
- Initial exploration of a Bevy app's type system
- Generating comprehensive type documentation
- Building tooling that needs to understand all available types
- Avoiding the slower workflow of calling `world.list_components` then `brp_type_guide` separately
